const clientSchema = require("../models/clients")
const clientValidation = require("../validation/clients")  



const createclient = async (req,res)=>{
   

    
    try{
        let newclient = await clientSchema.create(req.body)
        res.status(201).json(newclient)

    }catch(e){
        console.log(e)
        res.status(500).json({message:"no created data"})
    }
    
}


const getAllclients = async (req,res)=>{
    try{
        let clients = await clientSchema.find()
        res.status(200).json(clients);
    }catch(e){
        res.status(500).json({message:"client error"})
    }

}


const getclientById = async (req,res)=>{
    let clientId = req.params.id
    
    try  {
        let client = await client.findById(clientId)
        res.json(client)
    }catch(e){
        return res.status(400).json({message:"No cient with id "+clientId})
    }

}

const updateclientById = async (req,res)=>{
    
    const clientIdId = req.params.id;

    
    let {error,value } = clientValidation.validate(req.body);
    if (error){
        return res.status(400).json({message : error.details[0].message})
    }
    
    try  {
        console.log(value);
        const client = await  clientSchema.findByIdAndUpdate(clientId,value,{new:true})
        res.json(blog)
    }catch(e){
        return res.status(404).json({message: "client with id not found"});
    }
}

const deleteclientById = async (req,res)=>{
    let clientId = req.params.id;
    try{
        let client = await clientSchema.findByIdAndDelete(clientId)
        res.json({message:"deleted element with id " + clientId})
    }catch(e){
        res.status(404).json({message:"no  client with id "+clientId})
    }

}



module.exports = {
    getAllclients,
    getclientById,
    createclient,
    deleteclientById,
    updateclientById
}